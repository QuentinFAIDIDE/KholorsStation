name: ci

on:
  push:
    branches:
      - "master"

jobs:
  build_linux_image:
    name: Build Linux Build Container and Push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: base-builder.Containerfile
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        with:
          context: .
          file: ./base-builder.Containerfile
          push: true
          tags: ghcr.io/quentinfaidide/kholorsstation/builder:latest

  build-linux:
    name: Build and Test on Linux
    runs-on: ubuntu-latest
    needs: build_linux_image
    container:
      image: ghcr.io/quentinfaidide/kholorsstation/builder:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Cache build and libs directory
        id: cache-build-libs
        uses: actions/cache@v4
        with:
          path: |
            ./build
            ./libs
          key: ${{ runner.os }}-build-cache-${{ github.ref_name }}-2-${{ hashFiles('**/CmakeLists.txt') }}
          restore-keys: ${{ runner.os }}-build-cache-${{ github.ref_name }}-2-${{ hashFiles('**/CmakeLists.txt') }}
      - name: Configure
        run: |
          mkdir -p build
          git config --global --add safe.directory '*'
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build
        run: |
          mkdir -p build
          cd build
          make -j4
      - name: Test
        run: |
          mkdir -p build
          cd build
          ctest -E "example"

  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@v11
      - name: Cache build and libs directory
        id: cache-build-libs
        uses: actions/cache@v4
        with:
          path: |
            ./build
            ./libs
          key: ${{ runner.os }}-build-cache-win-${{ github.ref_name }}-2-${{ hashFiles('**/CmakeLists.txt') }}
          restore-keys: ${{ runner.os }}-build-cache-win-${{ github.ref_name }}-2-${{ hashFiles('**/CmakeLists.txt') }}
      - name: Configure
        run: cmake --preset windows -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_POLICY_VERSION_MINIMUM=3.5 .
      - name: Build
        run: |
          cmake --build build --parallel 4 --config RelWithDebInfo --target StationApp
          cmake --build build --parallel 4 --config RelWithDebInfo --target SinkPlugin_VST3
